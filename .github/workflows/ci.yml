name: CI/CD Workflow

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on PRs to the main branch

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.SB_GA_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.SB_GA_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.SB_GA_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.SB_GA_POSTGRES_USER }}"  # Use secret for the health check user
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
      kafka:
        image: confluentinc/cp-kafka:latest
        ports:
          - 9092:9092

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.14"

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Backend Tests
        working-directory: ./backend
        run: python manage.py test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Test Frontend
        working-directory: ./frontend
        run: npm test

  docker-deploy:
    name: Deploy Docker Containers
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.SB_DOCKER_USERNAME }}
          password: ${{ secrets.SB_DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          docker build -t myapp-backend ./backend
          docker tag myapp-backend:latest mydockerhubuser/myapp-backend:latest
          docker push mydockerhubuser/myapp-backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t myapp-frontend ./frontend
          docker tag myapp-frontend:latest mydockerhubuser/myapp-frontend:latest
          docker push mydockerhubuser/myapp-frontend:latest

